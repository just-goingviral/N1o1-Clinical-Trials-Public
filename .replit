modules = ["python-3.11", "postgresql-16"]

[nix]
channel = "stable-24_05"
packages = ["cairo", "ffmpeg-full", "freetype", "ghostscript", "glibcLocales", "gobject-introspection", "gtk3", "libxcrypt", "pkg-config", "qhull", "tcl", "tk", "xsimd"]

[deployment]
deploymentTarget = "autoscale"
build = ["sh", "-c", "pip install -r requirements.txt"]
run = ["sh", "-c", "gunicorn --bind 0.0.0.0:$PORT --timeout 300 --workers 2 --keep-alive 120 --log-level info main:app"]

[env]
REPLIT_DISABLE_PACKAGE_LAYER = "1"

[workflows]
runButton = "Run Flask App (Fixed)"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Start application"

[[workflows.workflow]]
name = "Start application"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "gunicorn --bind 0.0.0.0:$PORT --reuse-port --reload main:app"
waitForPort = 5000

[[workflows.workflow]]
name = "Run Flask App"
author = 36957810
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export PORT=5000 && ./run_with_port.sh"

[[workflows.workflow]]
name = "Test AI Endpoints"
author = 36957810
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python test_ai_endpoints.py"

[[workflows.workflow]]
name = "Run Flask App (Forced)"
author = 36957810
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Kill any potential processes on port 5000 first"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "fuser -k 5000/tcp 2>/dev/null || echo \"No process on port 5000\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "sleep 2"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Run the Flask app"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export PORT=5000 && gunicorn --bind 0.0.0.0:5000 --timeout 300 --workers 1 main:app"

[[workflows.workflow]]
name = "Start N1O1 Server"
author = 36957810
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Kill any potential processes on port 5000 first"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "fuser -k 5000/tcp 2>/dev/null || echo \"No process on port 5000\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "sleep 1"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Set PORT environment variable and run the server"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export PORT=5000 && gunicorn --bind 0.0.0.0:$PORT --timeout 300 --workers 1 --keep-alive 120 main:app"

[[workflows.workflow]]
name = "Run Flask App (Fixed)"
author = 36957810
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Kill any potential processes on port 5000 first"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "fuser -k 5000/tcp 2>/dev/null || echo \"No process on port 5000\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "sleep 1"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Set PORT environment variable and run the server with the correct binding"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export PORT=5000 && gunicorn --bind 0.0.0.0:$PORT --timeout 300 --workers 1 --keep-alive 120 --log-level info main:app"

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 5001
externalPort = 3000

[[ports]]
localPort = 8080
externalPort = 8080
